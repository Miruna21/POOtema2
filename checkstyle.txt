Starting audit...
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:32:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrRoundParalyzed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrRoundParalyzed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:35:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'subNrRoundParalysed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'subNrRoundParalysed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:35:37: Parameter passedRound should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:35:53: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:38:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getOvertimeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getOvertimeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:42:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setOvertimeDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setOvertimeDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:42:35: Parameter overtimeDamage should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:46:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setNrRoundParalyzed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setNrRoundParalyzed' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:46:37: Parameter nrRoundParalyzed should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:50:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getNrBackstabHit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getNrBackstabHit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:54:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addNrBackstabHit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addNrBackstabHit' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:54:34: Parameter nrBackstabHit should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:54:38: 'nrBackstabHit' hides a field. [HiddenField]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:58:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setxPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setxPos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:58:25: Parameter xPos should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:62:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setyPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setyPos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:62:25: Parameter yPos should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:66:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getMovPermission' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getMovPermission' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:70:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getDamageWithoutRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getDamageWithoutRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:74:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setDamageWithoutRaceModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setDamageWithoutRaceModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:74:46: Parameter damageWithoutRaceModifier should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:78:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:81:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getxPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getxPos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:81:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:84:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getyPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getyPos' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:84:25: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:87:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getLife' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getLife' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:87:29: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:90:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:90:26: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:94:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setRound' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setRound' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:94:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:97:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setMovPermission' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setMovPermission' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:97:34: Parameter movPermission should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:97:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:101:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:101:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:105:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:105:26: Parameter level should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:109:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'setLife' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'setLife' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:109:25: Parameter dead should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:109:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:113:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:117:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:121:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'getLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'getLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:125:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'addHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'addHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:125:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:125:27: 'hp' hides a field. [HiddenField]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:125:30: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:129:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'subHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'subHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:129:23: Parameter hp should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:129:27: 'hp' hides a field. [HiddenField]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:129:30: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:131:30: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:136:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'gainXp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'gainXp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:136:34: 'xp' hides a field. [HiddenField]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:136:84: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:140:24: '250' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:140:43: '50' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:140:64: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:140:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:142:28: '250' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:142:45: '50' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:142:64: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:142:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:144:32: '250' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:144:49: '50' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:144:68: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:144:71: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:165:5: Class 'Player' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Player' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Player.java:168:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:3:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:5:30: Name 'plusDamagePerLevel1' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:6:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:6:30: Name 'otherDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:7:30: Name 'plusDamagePerLevel2' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:8:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:9:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:10:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:11:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:11:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:13:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:13:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:13:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:13:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:18:21: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:18:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:25:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:26:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:26:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:26:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:29: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:36:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:37:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:37:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:37:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:40: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:47:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:48:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:48:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:48:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:51: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:58:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:59:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:59:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:59:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:62: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:68:5: Class 'Ignite' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Ignite' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:68:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:68:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:68:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:69:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:72:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:72:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ignite.java:75:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:4:30: Name 'initialHp' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:5:30: Name 'plusHpPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:9:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:14:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getRace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getRace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:18:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getInitialHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getInitialHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:22:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'getPlusHpPerLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'getPlusHpPerLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:26:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'isHitBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'isHitBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:27:25: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:27:42: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:31:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'acceptLandModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'acceptLandModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:32:37: Parameter g should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:36:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:37:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:37:36: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:37:51: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:37:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:42:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:43:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:43:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:43:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:43:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:48:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:49:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:49:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:49:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:49:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:54:5: Class 'Knight' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Knight' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:55:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:55:46: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:55:61: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Knight.java:55:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:3:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:5:30: Name 'plusDamagePerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:11:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:11:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:11:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:11:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:17:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:18:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:18:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:18:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:21: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:23:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:24:33: '6' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:26:33: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:38:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:39:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:39:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:39:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:42: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:44:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:45:33: '6' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:47:33: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:59:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:60:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:60:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:60:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:63: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:65:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:66:33: '6' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:68:33: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:80:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:81:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:81:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:81:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:84: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:86:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:87:33: '6' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:89:33: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:100:5: Class 'Paralysis' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Paralysis' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:100:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:100:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:100:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:101:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:104:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:104:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Paralysis.java:107:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:3:41: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:5:30: Name 'plusDamagePerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:11:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:11:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:11:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:11:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:17:44: '3' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:17:81: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:18:27: '1.5f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:23:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:24:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:24:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:24:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:27: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:35:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:36:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:36:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:36:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:39: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:47:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:48:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:48:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:48:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:51: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:59:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:60:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:60:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:60:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:63: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:70:5: Class 'Backstab' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Backstab' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:70:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:70:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:70:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:71:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:74:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:74:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Backstab.java:77:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:6:36: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:7:32: Name 'specialLandModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:9:18: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:13:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'getPlayersOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'getPlayersOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:17:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'addPlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'addPlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:18:74: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:22:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'removePlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'removePlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:23:43: Parameter playerOnThisPlaceId should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:27:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'hasTwoPlayersOnThisPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'hasTwoPlayersOnThisPlace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:29:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:35:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:36:41: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:40:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:41:41: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:45:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:46:41: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:50:5: Class 'Land' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Land' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Land.java:51:41: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ability.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ability.java:4:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ability.java:5:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ability.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ability.java:7:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:6:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:7:32: Name 'specialLandModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:9:20: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:13:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'getPlayersOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'getPlayersOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:17:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'addPlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'addPlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:18:74: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:22:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'removePlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'removePlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:23:43: Parameter playerOnThisPlaceId should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:27:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'hasTwoPlayersOnThisPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'hasTwoPlayersOnThisPlace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:29:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:35:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:36:41: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:40:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:41:41: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:45:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:46:41: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:50:5: Class 'Desert' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Desert' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Desert.java:51:41: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:3:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:4:32: Name 'basePercent' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:5:32: Name 'plusPercentPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:11:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:12:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:12:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:12:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:16: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:17:19: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:19:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:31:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:32:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:32:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:32:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:36: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:37:19: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:39:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:51:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:52:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:52:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:52:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:56: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:57:19: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:59:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:71:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:72:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:72:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:72:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:76: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:77:19: '0.3f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:79:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:90:5: Class 'Drain' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Drain' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:90:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:90:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:90:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:91:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:94:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:94:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Drain.java:97:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:6:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:7:32: Name 'specialLandModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:9:19: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:13:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'getPlayersOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'getPlayersOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:17:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'addPlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'addPlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:18:74: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:22:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'removePlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'removePlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:27:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'hasTwoPlayersOnThisPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'hasTwoPlayersOnThisPlace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:29:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:35:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:36:41: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:40:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:41:41: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:45:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:46:41: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:50:5: Class 'Woods' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Woods' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Woods.java:51:41: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:6:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:7:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:8:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:9:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:11:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:12:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:13:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Ground.java:14:5: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:7:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'movePlayersOnMapAndPlay' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'movePlayersOnMapAndPlay' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:8: Line is longer than 100 characters (found 111). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:9: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:9:104: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:10:43: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:17:56: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:21: switch without "default" clause. [MissingSwitchDefault]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:21:30: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:25:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:33:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:41:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:49:48: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:62:5: Class 'Game' looks like designed for extension (can be subclassed), but the method 'lookForBattlesAndStartTheFight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Game' final or making the method 'lookForBattlesAndStartTheFight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:65:80: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:66:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:67:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:68:66: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:73:79: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:77:68: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:81:80: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:85:68: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:91:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:95:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:96: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:97: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:99: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:100: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Game.java:108:49: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:3:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:5:30: Name 'plusDamagePerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:12:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:12:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:12:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:12:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:18:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:19:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:19:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:19:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:22: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:29:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:30:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:30:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:30:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:33: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:40:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:41:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:41:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:41:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:44: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:51:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:52:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:52:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:52:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:55: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:61:5: Class 'Fireblast' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Fireblast' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:61:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:61:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:61:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:62:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:65:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:65:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Fireblast.java:68:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:3:35: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:4:30: Name 'initialHp' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:5:30: Name 'plusHpPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:10:64: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:15:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getRace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getRace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:19:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getInitialHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getInitialHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:23:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'getPlusHpPerLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'getPlusHpPerLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:27:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'isHitBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'isHitBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:28:25: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:28:42: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:32:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'acceptLandModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'acceptLandModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:33:37: Parameter g should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:37:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:38:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:38:36: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:38:51: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:38:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:43:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:44:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:44:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:44:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:44:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:49:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:50:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:50:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:50:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:50:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:55:5: Class 'Wizard' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Wizard' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:56:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:56:46: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:56:61: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Wizard.java:56:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:4:30: Name 'initialHp' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:5:30: Name 'plusHpPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:10:63: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:15:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getRace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getRace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:19:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getInitialHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getInitialHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:23:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'getPlusHpPerLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'getPlusHpPerLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:27:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'isHitBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'isHitBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:28:25: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:28:42: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:32:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'acceptLandModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'acceptLandModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:33:37: Parameter g should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:37:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:38:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:38:36: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:38:51: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:38:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:43:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:44:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:44:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:44:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:44:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:50:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:51:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:51:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:51:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:51:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:57:5: Class 'Rogue' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Rogue' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:58:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:58:46: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:58:61: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Rogue.java:58:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:3:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:5:30: Name 'plusDamagePerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:12:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:12:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:12:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:12:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:19:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:20:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:20:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:20:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:21: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:22:25: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:23:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:29: Line is longer than 100 characters (found 108). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:37:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:38:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:38:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:38:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:39: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:40:25: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:41:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:47: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:55:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:56:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:56:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:56:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:57: Line is longer than 100 characters (found 107). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:58:25: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:59:38: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:65: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:73:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:74:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:74:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:74:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:75: Line is longer than 100 characters (found 119). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:76:25: '0.2f' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:77:42: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:83: Line is longer than 100 characters (found 113). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:90:5: Class 'Execute' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Execute' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:90:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:90:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:90:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:91:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:94:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:94:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Execute.java:97:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:3:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:4:32: Name 'basePercent' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:5:32: Name 'plusPercentPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:10:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:11:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:11:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:11:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:23:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:23:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:23:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:27:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:28:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:28:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:28:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:39:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:40:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:40:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:40:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:50:5: Class 'Deflect' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Deflect' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:50:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:50:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:50:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:51:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:54:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:54:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Deflect.java:57:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:4:8: Unused import - java.util.List. [UnusedImports]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:5:8: Unused import - java.util.Vector. [UnusedImports]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:7: Class GroundFactory should be declared as final. [FinalClass]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:9:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:11:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:17:32: Parameter groundType should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/GroundFactory.java:18:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:3:39: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:4:30: Name 'initialHp' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:5:30: Name 'plusHpPerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:10:68: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:15:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getRace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getRace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:19:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getInitialHp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getInitialHp' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:23:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'getPlusHpPerLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'getPlusHpPerLevel' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:27:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'isHitBy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'isHitBy' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:28:25: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:28:42: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:32:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'acceptLandModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'acceptLandModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:33:37: Parameter g should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:37:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:38:23: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:38:36: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:38:51: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:38:67: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:43:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:44:23: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:44:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:44:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:44:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:49:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:50:23: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:50:38: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:50:53: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:50:69: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:55:5: Class 'Pyromancer' looks like designed for extension (can be subclassed), but the method 'fight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Pyromancer' final or making the method 'fight' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:56:23: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:56:46: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:56:61: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Pyromancer.java:56:77: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:6:40: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:7:32: Name 'specialLandModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:9:22: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:13:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'getPlayersOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'getPlayersOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:17:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'addPlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'addPlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:18:74: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:22:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'removePlayerOnThisPlaceId' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'removePlayerOnThisPlaceId' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:23:43: Parameter playerOnThisPlaceId should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:27:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'hasTwoPlayersOnThisPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'hasTwoPlayersOnThisPlace' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:29:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:35:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:36:41: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:40:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:41:41: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:45:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:46:41: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:50:5: Class 'Vulcanic' looks like designed for extension (can be subclassed), but the method 'transferGroundModifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Vulcanic' final or making the method 'transferGroundModifier' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Vulcanic.java:51:41: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:3:37: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:4:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:4:30: Name 'baseDamage' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:5:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:5:30: Name 'plusDamagePerLevel' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:7:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:7:32: Name 'RogueVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:8:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:8:32: Name 'KnightVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:9:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:9:32: Name 'PyromancerVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:10:19: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:10:32: Name 'WizardVictimModifier' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:11:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'levelAndGroundDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'levelAndGroundDamage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:11:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:11:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:11:70: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:17:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:18:24: Parameter rogue should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:18:37: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:18:52: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:21: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:33:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:34:24: Parameter wizard should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:34:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:34:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:37: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:49:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:50:24: Parameter knight should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:50:39: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:50:54: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:53: Line is longer than 100 characters (found 105). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:65:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'attack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'attack' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:66:24: Parameter pyromancer should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:66:47: Parameter ground should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:66:62: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:69: Line is longer than 100 characters (found 109). [LineLength]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:80:5: Class 'Slam' looks like designed for extension (can be subclassed), but the method 'verifyVictimDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Slam' final or making the method 'verifyVictimDead' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:80:34: Parameter attacker should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:80:51: Parameter victim should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:80:65: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:81:31: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:84:21: '200' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:84:71: '40' is a magic number. [MagicNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/Slam.java:87:23: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/PlayerFactory.java:1:9: Name 'Game' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/PlayerFactory.java:5:28: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Game/PlayerFactory.java:8:46: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:1:9: Name 'Main' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:3: Using the '.*' form of import should be avoided - Game.*. [AvoidStarImport]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:8:8: Unused import - java.io.FileWriter. [UnusedImports]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:12:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:14:29: Parameter args should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:34:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:36:47: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Main/Main.java:44:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Writer/MyFileWriter.java:1:9: Name 'Writer' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Writer/MyFileWriter.java:15:5: Class 'MyFileWriter' looks like designed for extension (can be subclassed), but the method 'writePlayersInFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MyFileWriter' final or making the method 'writePlayersInFile' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Writer/MyFileWriter.java:15:36: Parameter players should be final. [FinalParameters]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInputLoader.java:1:9: Name 'Reader' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInputLoader.java:14:5: Class 'GameInputLoader' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GameInputLoader' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInputLoader.java:47:44: '{' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInput.java:1:9: Name 'Reader' must match pattern '^[a-z]+(\.[a-zA-Z_][a-zA-Z0-9_]*)*$'. [PackageName]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInput.java:25:12: More than 7 parameters (found 8). [ParameterNumber]
[ERROR] /home/miruna/IdeaProjects/POOtema2/src/Reader/GameInput.java:75: Line is longer than 100 characters (found 102). [LineLength]
Audit done.
Checkstyle ends with 754 errors.
